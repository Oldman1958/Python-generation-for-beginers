"""
Угадайка слов
"""

word_list = ['год', 'месяц']
# --------------Угадайка слов----------------
# Описание проекта: программа загадывает слово, а пользователь должен его угадать.
# Изначально все буквы слова неизвестны. Также рисуется виселица с петлей.
# Пользователь предлагает букву, которая может входить в это слово.
# Если такая буква есть в слове, то программа ставит букву столько раз, сколько она встречается в слове.
# Если такой буквы нет, к виселице добавляется круг в петле, изображающий голову.
# Пользователь продолжает отгадывать буквы до тех пор, пока не отгадает всё слово.
# За каждую неудачную попытку добавляется еще одна часть туловища висельника (обычно их 6: голова, туловище, 2 руки и
# 2 ноги.
# Составляющие проекта:
# Целые числа (тип int);
# Переменные;
# Ввод / вывод данных (функции input() и print());
# Условный оператор (if/elif/else);
# Цикл while;
# Бесконечный цикл;
# Операторы break, continue;
# Создание пользовательских функций;
# Списочные выражения;
# Работа с модулем random для генерации случайных чисел.

import random


# --------------- ФУНКЦИЯ СЛУЧАЙНОГО СЛОВА -------------
def get_word(word):
    rezult = random.choice(word).upper()
    return rezult


# ---------------ФУНКЦИЯ ОСНОВНОЙ ЛОГИКИ ИГРЫ---------------
def play(word):  # принимает в себя слово, которе случайным образом генерирует функция get_word(word)
    word2 = list(word)
    word_completion = ['_'] * len(word)  # строка, содержащая символы _ на каждую букву задуманного слова
    guessed_letters = []  # создала пустой список, чтобы добавлять потом уже названные буквы
    guessed_words = []  # список уже названных слов
    tries = 6  # количество попыток
    print('Добро пожаловать в угадайку слов!')  # выводим приветствие
    print(display_hangman(tries), 'Слово', *word_completion, 'состоит из', len(word),
          'букв. У вас 6 попыток')  # текущее состояние игры. печатает результат вызова функции display_hangman() с начальным количеством допустимых промааспхов tries = 6
    while True:  # создаем бесконечный цикл
        n = input('Введите букву или слово целиком:').upper()  # пользователь вводит букву
        if not n.isalpha():  # защита от дурака. если введеная строка n не состоит из букв, то
            print('Это не буква.')
            continue  # возвращаемся в цикл
        if n in guessed_words:  # если пользователь уже вводил это значение, то
            print('Вы уже вводили это слово.')  # предупреждаем об этом пользователя
            continue  # возвращаемся к циклу
        if len(n) > 1:  # если длина введеной строки больше 1, то
            if n == word:  # проверяем равна ли она нашему слову, если так то
                print('Поздравляем, вы угадали слово! Вы победили!')  # выводим поздравление
                return
            else:  # иначе
                guessed_words.append(n)  # вносим строку в список
                tries -= 1  # вычитаем попытку из счетчика
                print(f'Не верно, осталось {tries} попыток.')
                print(display_hangman(tries))
                print(*word_completion)
                if tries == 0:  # если попыток не осталось, то
                    print(f'Проигрыш. Вы не смогли угадать слово: {word}')
                    print(display_hangman(tries))
                    return
                continue  # возврат к циклу
        if len(n) == 1:  # если количество введеных знаков рано 1 то идем дальше
            if n in guessed_letters:  # если пользователь уже вводил это значение, то
                print('Вы уже вводили эту букву.')  # предупреждаем об этом пользователя
                continue  # возвращаемся к циклу
            guessed_letters.append(n)  # если не вводил, то добавили в список
            if n in word2:  # если буква есть в загаданном слове, то
                for j in range(len(word2)):  # создаем цикл и идем по каждому символу слова
                    if word2[j] == n:  # если буква в слове равна теч что ввел пользователь, то
                        word_completion[j] = n  # меняем в word_completion '_' по индексу
                print('Откройте букву:', n)  # открываем букву
                print(*word_completion)  # открываем текущее состояние word_completion
                if word2 == word_completion:  # если список букв загаданного слова равен списку угаданных букв, то
                    print('Поздравляем, вы угадали слово! Вы победили!')  # выводим поздравление
                    return
            else:  # если буква новая и ее нет в слове, то
                tries -= 1  # минус из счетчика попытка
                print(display_hangman(tries))  # печатаем текущее состояние человечка
                print('Нет такой буквы. Осталось', tries, 'попыток.',
                      *word_completion)  # сообщаем о кол-ве оставшихся попыток
            if tries == 0:  # если попыток не осталось, то
                print(f'Проигрыш! Вы не смогли угадать слово: {word}')
                return


# ----------------ФУНКЦИЯ ПОЛУЧЕНИЯ ТЕКУЩЕГО СОСТОЯНИЯ-------------
def display_hangman(tries):  # если tries==6, то человек еще не повешан, если 0, то его повесили и это проигрыш
    stages = [  # финальное состояние: голова, торс, обе руки, обе ноги
        '''
           --------
           |      |
           |      O
           |     \\|/
           |      |
           |     / \\
           - 
        ''',
        # голова, торс, обе руки, одна нога
        '''
           --------
           |      |
           |      O
           |     \\|/
           |      |
           |     / 
           - 
        ''',
        # голова, торс, обе руки
        '''
           --------
           |      |
           |      O
           |     \\|/
           |      |
           |      
           - 
        ''',
        # голова, торс и одна рука
        '''
           --------
           |      |
           |      O
           |     \\|
           |      |
           |     
           -
        ''',
        # голова и торс
        '''
           --------
           |      |
           |      O
           |      |
           |      |
           |     
           - 
        ''',
        # голова
        '''
           --------
           |      |
           |      O
           |    
           |      
           |     
           - 
        ''',
        # начальное состояние
        '''
           --------
           |      |
           |      
           |    
           |      
           |     
           - 
        '''
    ]
    return stages[tries]


word_list = ['КЛЮЧ', 'КНИГА', 'ЕНОТ', 'МАШИНКА', 'КОРОВА', 'ТЕЛЕЖКА', 'ШЛЕМ', 'КНОПКА', 'ШНУР', 'ЧЕРНЫЙ',
             'ВЛАСТЕЛИН', 'СКАЙП', 'ДУБ', 'ЧАСЫ', 'ТРУБА', 'ЕЛКА', 'ИНСТИТУТ', 'КОРОБКА', 'ТАБЛИЧКА', 'ВОДА',
             'СКОВОРОДА',
             'МНОГОНОЖКА', 'ЕВРЕЙ', 'ТЕРМИТ', 'КАЧЕК', 'РУЛОН', 'МАГНИТОФОН', 'НОГА', 'СЛОН', 'МИКРОВОЛНОВКА', 'ТОРТ',
             'МАК',
             'ДЫМ', 'ЧАЙКА', 'ВАЛЕТ', 'ПЛИНТУС', 'ШАПКА', 'ДИНОЗАВР', 'ТОРШЕР', 'БАЛАЛАЙКА', 'БАНКА', 'ЯХТА', 'ОВЦА',
             'БАНАН',
             'ДУБ', 'АНИМЕ', 'РАДУГА', 'БУКВА', 'ВЕЛОСИПЕД', 'БАНДЖО', 'ГОЛУБЬ', 'ВИНТОВКА', 'КУБОК', 'ЖАСМИН',
             'ТЕЛЕФОН',
             'АНДРОИД', 'ГОРА', 'ХАЛАТ', 'ЖЕТОН', 'ОБОД', 'МЫЛО', 'ЙОГ', 'ШИШКА', 'ДОЛЛАР', 'КОЛОНКА', 'КУБИК', 'ОМАР',
             'РАКЕТА', 'МОРКОВКА', 'ЗЕРКАЛО', 'МОЛОТ', 'ВОЗДУХ', 'ЗМЕЙ', 'ЁЖ', 'ПАЛЬМА', 'МАСЛО', 'ДИДЖЕЙ', 'МЕШОК',
             'ТЮБИК',
             'МОЗГ', 'ПОЕЗД', 'РОЗЕТКА', 'ПАРАШЮТИСТ', 'БЕЛКА', 'ШПРОТЫ', 'САМОСВАЛ', 'ПАЗЛ', 'БУТЫЛКА', 'КРЕМЛЬ',
             'ПИЦЦА',
             'МАКАРОНЫ', 'КОВЕР', 'ЗУБЫ', 'ЯРЛЫК', 'КАШАЛОТ', 'МАРС', 'ШАКАЛ', 'ПОМАДА', 'ДЖИП', 'ЛЕЩ', 'КАМЕНЬ',
             'ДИСК']

while True:
    otvet = input('Хотите сыграть в игру? напишите да/нет')
    if otvet == 'да':
        play(get_word(word_list))
    else:
        exit()
